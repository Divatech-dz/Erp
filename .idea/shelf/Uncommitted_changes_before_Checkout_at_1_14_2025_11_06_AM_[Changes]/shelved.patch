Index: lib/utils.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* eslint-disable no-prototype-builtins */\r\nimport axiosInstance from \"@/lib/axios\";\r\nimport Cookies from 'js-cookie';\r\nimport {TabsNameInterface} from '@/types';\r\nimport {type ClassValue, clsx} from 'clsx';\r\nimport qs from 'query-string';\r\nimport {twMerge} from 'tailwind-merge';\r\nimport {z} from 'zod';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n    return twMerge(clsx(inputs));\r\n}\r\n\r\n// FORMAT DATE TIME\r\nexport const formatDateTime = (dateString: Date) => {\r\n    const dateTimeOptions: Intl.DateTimeFormatOptions = {\r\n        weekday: 'short', // abbreviated weekday name (e.g., 'Mon')\r\n        month: 'short', // abbreviated month name (e.g., 'Oct')\r\n        day: 'numeric', // numeric day of the month (e.g., '25')\r\n        hour: 'numeric', // numeric hour (e.g., '8')\r\n        minute: 'numeric', // numeric minute (e.g., '30')\r\n        hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\r\n    };\r\n\r\n    const dateDayOptions: Intl.DateTimeFormatOptions = {\r\n        weekday: 'short', // abbreviated weekday name (e.g., 'Mon')\r\n        year: 'numeric', // numeric year (e.g., '2023')\r\n        month: '2-digit', // abbreviated month name (e.g., 'Oct')\r\n        day: '2-digit', // numeric day of the month (e.g., '25')\r\n    };\r\n\r\n    const dateOptions: Intl.DateTimeFormatOptions = {\r\n        month: 'short', // abbreviated month name (e.g., 'Oct')\r\n        year: 'numeric', // numeric year (e.g., '2023')\r\n        day: 'numeric', // numeric day of the month (e.g., '25')\r\n    };\r\n\r\n    const timeOptions: Intl.DateTimeFormatOptions = {\r\n        hour: 'numeric', // numeric hour (e.g., '8')\r\n        minute: 'numeric', // numeric minute (e.g., '30')\r\n        hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\r\n    };\r\n\r\n    const formattedDateTime: string = new Date(dateString).toLocaleString(\r\n        'en-US',\r\n        dateTimeOptions,\r\n    );\r\n\r\n    const formattedDateDay: string = new Date(dateString).toLocaleString(\r\n        'en-US',\r\n        dateDayOptions,\r\n    );\r\n\r\n    const formattedDate: string = new Date(dateString).toLocaleString(\r\n        'en-US',\r\n        dateOptions,\r\n    );\r\n\r\n    const formattedTime: string = new Date(dateString).toLocaleString(\r\n        'en-US',\r\n        timeOptions,\r\n    );\r\n\r\n    return {\r\n        dateTime: formattedDateTime,\r\n        dateDay: formattedDateDay,\r\n        dateOnly: formattedDate,\r\n        timeOnly: formattedTime,\r\n    };\r\n};\r\n\r\nexport function formatAmount(amount: number): string {\r\n    const formatter = new Intl.NumberFormat(\"DZD\", {\r\n        style: 'currency',\r\n        currency: 'DZD',\r\n        minimumFractionDigits: 2,\r\n    });\r\n\r\n    return formatter.format(amount);\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const parseStringify = (value: any) => JSON.parse(JSON.stringify(value));\r\n\r\nexport const removeSpecialCharacters = (value: string) => {\r\n    return value.replace(/[^\\w\\s]/gi, '');\r\n};\r\n\r\ninterface UrlQueryParams {\r\n    params: string;\r\n    key: string;\r\n    value: string;\r\n}\r\n\r\nexport function formUrlQuery({params, key, value}: UrlQueryParams) {\r\n    const currentUrl = qs.parse(params);\r\n\r\n    currentUrl[key] = value;\r\n\r\n    return qs.stringifyUrl(\r\n        {\r\n            url: window.location.pathname,\r\n            query: currentUrl,\r\n        },\r\n        {skipNull: true},\r\n    );\r\n}\r\n\r\nexport function extractCustomerIdFromUrl(url: string) {\r\n    // Split the URL string by '/'\r\n    const parts = url.split('/');\r\n\r\n    // Extract the last part, which represents the customer ID\r\n    const customerId = parts[parts.length - 1];\r\n    return customerId;\r\n}\r\n\r\nexport function encryptId(id: string) {\r\n    return btoa(id);\r\n}\r\n\r\nexport function decryptId(id: string) {\r\n    return atob(id);\r\n}\r\n\r\nexport const getTransactionStatus = (date: Date) => {\r\n    const today = new Date();\r\n    const twoDaysAgo = new Date(today);\r\n    twoDaysAgo.setDate(today.getDate() - 2);\r\n\r\n    return date > twoDaysAgo ? 'Processing' : 'Success';\r\n};\r\n\r\nexport const authFormSchemaSignIn = () => {\r\n    return z.object({\r\n        username: z\r\n            .string({\r\n                required_error: 'username is required',\r\n                invalid_type_error: 'username must be a string',\r\n            })\r\n            .min(3, 'Username must be at least 3 characters long'),\r\n\r\n        password: z\r\n            .string({\r\n                required_error: 'password is required',\r\n                invalid_type_error: 'password must be a string',\r\n            })\r\n            .min(8, 'Password must be at least 8 characters long'),\r\n    });\r\n};\r\n\r\nexport const authFormSchemaSignUp = () => {\r\n    return z.object({\r\n        firstName: z.string().min(3),\r\n        firstNameArabic: z.string().optional(),\r\n        Function: z.string().optional(),\r\n        FunctionArabic: z.string().optional(),\r\n        MatriculeDeclaration: z.string().optional(),\r\n        startDate: z.string().transform((val) => new Date(val)).optional(),\r\n        placeOfBirth: z.string().optional(),\r\n        placeOfBirthArabic: z.string().optional(),\r\n        HourlyCost: z.number().optional(),\r\n        DateOfBirth: z.string().transform((val) => new Date(val)).optional(),\r\n        endDate: z.string().transform((val) => new Date(val)).optional(),\r\n        Salary: z.number().optional(),\r\n        PrimePanierTransport: z.number().optional(),\r\n        Echelon: z.number().optional(),\r\n        CountNumber: z.number().optional(),\r\n        SocialInsuranceNumber: z.number().optional(),\r\n\r\n\r\n    });\r\n}\r\n\r\nexport const billFormSchema = () => {\r\n    return z.object({\r\n        orderNumber: z.number(),\r\n        orderDate: z.date(),\r\n        AssociatedPurchaseOrder: z.string(),\r\n        warehouse: z.string(),\r\n        Note: z.string(),\r\n\r\n    })\r\n}\r\n\r\nexport const getSubLevelKeys = (data: TabsNameInterface, topKey: string): string[] | undefined => {\r\n    return data[topKey] ? Object.keys(data[topKey]) : undefined;\r\n};\r\n\r\nexport const handleExportExcel = (data: []) => {\r\n    const worksheet = XLSX.utils.json_to_sheet(data);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n    XLSX.writeFile(workbook, 'exported_data.xlsx');\r\n};\r\n\r\nexport const parseExcelFile = (file: File, onSuccess: (jsonData: any[]) => void, onError: (error: Error) => void) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n        try {\r\n            const data = new Uint8Array(e.target?.result as ArrayBuffer);\r\n            const workbook = XLSX.read(data, {type: 'array'});\r\n\r\n            const sheetName = workbook.SheetNames[0];\r\n            const worksheet = workbook.Sheets[sheetName];\r\n\r\n            const jsonData = XLSX.utils.sheet_to_json(worksheet);\r\n            onSuccess(jsonData);\r\n        } catch (error: unknown) {\r\n            if (error instanceof Error) {\r\n                onError(error);\r\n            } else {\r\n\r\n                onError(new Error('An unknown error occurred'));\r\n            }\r\n        }\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n};\r\n\r\nexport const fetchWithAuth = async (url: string, method: 'GET' | 'POST' = 'GET', data?: any) => {\r\n  const token = Cookies.get('token');\r\n  if (!token) {\r\n    console.error('No token found');\r\n    throw new Error('No token found');\r\n  }\r\n\r\n  try {\r\n    const response = await axiosInstance({\r\n      url,\r\n      method,\r\n      headers: { Authorization: `Bearer ${token}` },\r\n      data,\r\n    });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error(`Error fetching ${url}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n export function transformNestedData(\r\n  data: any[],\r\n  keyMap: Record<string, string>,\r\n  documentKeys?: string[], \r\n  aggregatedKeyName?: string \r\n): any[] {\r\n  return data?.map((item) => {\r\n    const transformed: Record<string, any> = {};\r\n    const aggregatedArray: { key: string; value: string }[] = [];\r\n\r\n    for (const [oldKey, newKey] of Object.entries(keyMap)) {\r\n      const keys = oldKey.split(\".\");\r\n      let value = item;\r\n\r\n      for (const key of keys) {\r\n        value = value ? value[key] : undefined;\r\n      }\r\n\r\n      \r\n      if (documentKeys?.includes(oldKey)) {\r\n        aggregatedArray.push({\r\n          key: newKey,\r\n          value: value ? `//${value}` : \"\",\r\n        });\r\n      } else if (Array.isArray(value)) {\r\n        transformed[newKey] = value.join(\", \"); \r\n      } else if (typeof value === \"object\" && value !== null) {\r\n        transformed[newKey] = JSON.stringify(value); \r\n      } else {\r\n        transformed[newKey] = value;\r\n      }\r\n    }\r\n\r\n\r\n    transformed[aggregatedKeyName!] = aggregatedArray;\r\n    return transformed;\r\n  });\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/utils.ts b/lib/utils.ts
--- a/lib/utils.ts	(revision 278e15b7feeb1e81c611c209880532be37a20951)
+++ b/lib/utils.ts	(date 1736347528047)
@@ -80,6 +80,26 @@
     return formatter.format(amount);
 }
 
+export function formatDate(dateString: string): string {
+  const date = new Date(dateString);
+  const year = date.getFullYear();
+  const month = String(date.getMonth() + 1).padStart(2, '0');
+  const day = String(date.getDate()).padStart(2, '0');
+  return `${year}-${month}-${day}`;
+}
+
+export function calculateMinutesLate(arrivalTime: string): number {
+  const [hours, minutes] = arrivalTime.split(':').map(Number);
+  const arrivalDate = new Date();
+  arrivalDate.setHours(hours, minutes, 0, 0);
+
+  const nineAM = new Date();
+  nineAM.setHours(9, 0, 0, 0);
+
+  const diff = arrivalDate.getTime() - nineAM.getTime();
+  return Math.max(0, Math.floor(diff / 60000)); // Convert milliseconds to minutes
+}
+
 // eslint-disable-next-line @typescript-eslint/no-explicit-any
 export const parseStringify = (value: any) => JSON.parse(JSON.stringify(value));
 
@@ -262,7 +282,6 @@
         value = value ? value[key] : undefined;
       }
 
-      
       if (documentKeys?.includes(oldKey)) {
         aggregatedArray.push({
           key: newKey,
@@ -277,7 +296,6 @@
       }
     }
 
-
     transformed[aggregatedKeyName!] = aggregatedArray;
     return transformed;
   });
Index: components/table-components/top-content.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use client';\r\n\r\nimport Image from 'next/image';\r\nimport React, { useState } from 'react';\r\nimport { Input } from '../ui/input';\r\nimport { icons } from '@/constants/icons';\r\nimport { ComponentsConfig, ComponentsRegistryKey, TopContentProps } from '@/types';\r\nimport { usePathname,useRouter} from 'next/navigation';\r\nimport componentsRegistry from '../componentsRegistry';\r\n\r\nexport const TopContent: React.FC<TopContentProps> = ({\r\n  setVisibleColumns,\r\n  columnNames,\r\n  visibleColumns,\r\n  setCurrentPage,\r\n  setCategory,\r\n  categories,\r\n  setSearch,\r\n  startDate,\r\n  setStartDate,\r\n  endDate,\r\n  setEndDate,\r\n  setClientType,\r\n  setUserId,\r\n  salesUsers\r\n}) => {\r\n\r\n  const [value, setValue] = useState('');\r\n  const pathname = usePathname();\r\n  const router=useRouter()\r\n \r\n  const handleColumnVisibilityChange = (columnKey: string) => {\r\n    setVisibleColumns((prev) => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.size === 1 && newSet.has(columnKey)) {\r\n        return newSet;\r\n      }\r\n      if (newSet.has(columnKey)) {\r\n        newSet.delete(columnKey)\r\n      } else {\r\n        newSet.add(columnKey);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const handleSearch = (value: string) => {\r\n    if (value !== '') {\r\n      setSearch?.(value);\r\n      setCurrentPage?.(1)\r\n    }\r\n  };\r\n  const handleClear = () => {\r\n    if (value !== '') {\r\n      if (setSearch) {\r\n        setSearch('');\r\n        setValue('')\r\n      }\r\n      if (setCurrentPage) {\r\n        setCurrentPage(1)\r\n      }\r\n    }\r\n  };\r\n  const config:ComponentsConfig = {\r\n    router,\r\n    columnNames,\r\n    handleColumnVisibilityChange,\r\n    visibleColumns,\r\n    categories,\r\n    setCategory,\r\n    setCurrentPage,\r\n  };\r\n\r\n  const renderButtons = () => {\r\n    const key = pathname.replace('/', '');\r\n    const registry = componentsRegistry(config);\r\n    const Component = registry[key as ComponentsRegistryKey];\r\n    return Component ? Component() : null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full flex items-center gap-4 my-2\">\r\n      <div className=\"relative flex items-center w-60\">\r\n        <button\r\n          className=\"absolute left-2\"\r\n          onClick={() => handleSearch(value)}\r\n        >\r\n          <Image src={icons.Search} alt=\"Search\" width={20} height={20} />\r\n        </button>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Rechercher\"\r\n          value={value}\r\n          className=\"w-full pl-8 pr-10 h-10 bg-gray-100 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n        />\r\n\r\n        <button\r\n          className=\"absolute right-2\"\r\n          onClick={handleClear}\r\n        >\r\n          <Image src={icons.remove} alt=\"Clear\" width={16} height={16} />\r\n        </button>\r\n      </div>\r\n\r\n      <button\r\n        className=\"flex items-center justify-center w-10 h-10 bg-gray-100 rounded-md border border-gray-300 hover:bg-gray-200\"\r\n      >\r\n        <Image src={icons.Excel} height={20} width={20} alt=\"Excel\" />\r\n      </button>\r\n\r\n      <div className=\"flex items-center gap-3\">{renderButtons()}</div>\r\n    </div>\r\n\r\n  );\r\n}\r\n  ;\r\n
===================================================================
diff --git a/components/table-components/top-content.tsx b/components/table-components/top-content.tsx
--- a/components/table-components/top-content.tsx	(revision 278e15b7feeb1e81c611c209880532be37a20951)
+++ b/components/table-components/top-content.tsx	(date 1736351323413)
@@ -44,14 +44,21 @@
     });
   };
 
-  const handleSearch = (value: string) => {
+  const handleSearch = (e: React.FormEvent,value: string) => {
     if (value !== '') {
+      e.preventDefault();
       setSearch?.(value);
       setCurrentPage?.(1)
     }
   };
+
+  const pressKey = (e: React.KeyboardEvent<HTMLInputElement>) => {
+            if (e.key === 'Enter') {
+                handleSearch(e, value);
+            }
+        };
+
   const handleClear = () => {
-    if (value !== '') {
       if (setSearch) {
         setSearch('');
         setValue('')
@@ -59,8 +66,8 @@
       if (setCurrentPage) {
         setCurrentPage(1)
       }
-    }
   };
+
   const config:ComponentsConfig = {
     router,
     columnNames,
@@ -80,10 +87,10 @@
 
   return (
     <div className="w-full flex items-center gap-4 my-2">
-      <div className="relative flex items-center w-60">
+      <div className="relative flex items-center w-60" onKeyDown={pressKey}>
         <button
           className="absolute left-2"
-          onClick={() => handleSearch(value)}
+          onClick={(e) => handleSearch(e, value)}
         >
           <Image src={icons.Search} alt="Search" width={20} height={20} />
         </button>
Index: constants/columnRenderers.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { cn, formatAmount } from '@/lib/utils';\r\nimport Image from 'next/image';\r\nimport React, {JSX} from 'react';\r\nimport { icons } from './icons';\r\n\r\ntype ColumnRenderer = (row: Record<string, any>, name: string) => JSX.Element;\r\n\r\n\r\nconst columnRenderers: Record<string, ColumnRenderer> = {\r\n\r\n  \"PV TTC -P-\": (row, name) => <p>{formatAmount(Number(row[name]))}</p>,\r\n  \"PV TTC -R-\": (row, name) => <p>{formatAmount(Number(row[name]))}</p>,\r\n  \"Etat de validation\":(row, name) => ( <p className={cn('inline-block px-2 py-1 rounded-full text-white font-semibold ', {\r\n    'bg-green-500': row[name], \r\n    'bg-yellow-500': !row[name], \r\n  })}\r\n>\r\n  {row[name] ? 'Validé' : 'En attente'}\r\n</p>),\r\n \"Documents associés\": (row,name) => {\r\n  return (\r\n    <div className=\"space-x-2\">\r\n      {row[name]?.map((value: { value: string | undefined; key: string; })=><a href={value?.value} className='inline-block px-2 py-1 rounded-full text-white font-semibold bg-black-1 hover:underline' key={value?.key}>{value.key}</a>)}\r\n    </div>\r\n  )\r\n },\r\n 'Livraison':(row,name)=>{\r\nconst isTruck = row[name];\r\n return (\r\n   <div className=\"flex items-center space-x-2\">\r\n     {isTruck ? (\r\n       <>\r\n         <p className=\"text-gray-800\">{row[name]}</p>\r\n         <Image\r\n           src={icons.truck}\r\n           height={20}\r\n           width={20}\r\n           alt=\"truck\"\r\n           className=\"inline-block\"\r\n         />\r\n       </>\r\n     ) : (\r\n       <Image\r\n         src={icons.walkingMan}\r\n         height={20}\r\n         width={20}\r\n         alt=\"walking-man\"\r\n         className=\"inline-block\"\r\n       />\r\n     )}\r\n   </div>\r\n )},\r\n \"Validation\":(row, name) => ( <p className={cn('inline-block px-2 py-1 rounded-full text-white font-semibold ', {\r\n    'bg-green-500': row[name], \r\n    'bg-yellow-500': !row[name], \r\n  })}\r\n>\r\n  {row[name] ? 'Validé' : 'En attente'}\r\n</p>),\r\n\r\n};\r\n\r\nexport default columnRenderers;
===================================================================
diff --git a/constants/columnRenderers.tsx b/constants/columnRenderers.tsx
--- a/constants/columnRenderers.tsx	(revision 278e15b7feeb1e81c611c209880532be37a20951)
+++ b/constants/columnRenderers.tsx	(date 1736351911600)
@@ -1,63 +1,82 @@
-import { cn, formatAmount } from '@/lib/utils';
+import {
+    cn, formatAmount, formatDate,
+    calculateMinutesLate
+} from '@/lib/utils';
 import Image from 'next/image';
 import React, {JSX} from 'react';
-import { icons } from './icons';
+import {icons} from './icons';
 
 type ColumnRenderer = (row: Record<string, any>, name: string) => JSX.Element;
 
 
 const columnRenderers: Record<string, ColumnRenderer> = {
 
-  "PV TTC -P-": (row, name) => <p>{formatAmount(Number(row[name]))}</p>,
-  "PV TTC -R-": (row, name) => <p>{formatAmount(Number(row[name]))}</p>,
-  "Etat de validation":(row, name) => ( <p className={cn('inline-block px-2 py-1 rounded-full text-white font-semibold ', {
-    'bg-green-500': row[name], 
-    'bg-yellow-500': !row[name], 
-  })}
->
-  {row[name] ? 'Validé' : 'En attente'}
-</p>),
- "Documents associés": (row,name) => {
-  return (
-    <div className="space-x-2">
-      {row[name]?.map((value: { value: string | undefined; key: string; })=><a href={value?.value} className='inline-block px-2 py-1 rounded-full text-white font-semibold bg-black-1 hover:underline' key={value?.key}>{value.key}</a>)}
-    </div>
-  )
- },
- 'Livraison':(row,name)=>{
-const isTruck = row[name];
- return (
-   <div className="flex items-center space-x-2">
-     {isTruck ? (
-       <>
-         <p className="text-gray-800">{row[name]}</p>
-         <Image
-           src={icons.truck}
-           height={20}
-           width={20}
-           alt="truck"
-           className="inline-block"
-         />
-       </>
-     ) : (
-       <Image
-         src={icons.walkingMan}
-         height={20}
-         width={20}
-         alt="walking-man"
-         className="inline-block"
-       />
-     )}
-   </div>
- )},
- "Validation":(row, name) => ( <p className={cn('inline-block px-2 py-1 rounded-full text-white font-semibold ', {
-    'bg-green-500': row[name], 
-    'bg-yellow-500': !row[name], 
-  })}
->
-  {row[name] ? 'Validé' : 'En attente'}
-</p>),
-
+    "PV TTC -P-": (row, name) => <p>{formatAmount(Number(row[name]))}</p>,
+    "PV TTC -R-": (row, name) => <p>{formatAmount(Number(row[name]))}</p>,
+    "Etat de validation": (row, name) => (
+        <p className={cn('inline-block px-2 py-1 rounded-full text-white font-semibold ', {
+            'bg-green-500': row[name],
+            'bg-yellow-500': !row[name],
+        })}
+        >
+            {row[name] ? 'Validé' : 'En attente'}
+        </p>),
+    "Documents associés": (row, name) => {
+        return (
+            <div className="space-x-2">
+                {row[name]?.map((value: { value: string | undefined; key: string; }) => <a href={value?.value}
+                                                                                           className='inline-block px-2 py-1 rounded-full text-white font-semibold bg-black-1 hover:underline'
+                                                                                           key={value?.key}>{value.key}</a>)}
+            </div>
+        )
+    },
+    'Livraison': (row, name) => {
+        const isTruck = row[name];
+        return (
+            <div className="flex items-center space-x-2">
+                {isTruck ? (
+                    <>
+                        <p className="text-gray-800">{row[name]}</p>
+                        <Image
+                            src={icons.truck}
+                            height={20}
+                            width={20}
+                            alt="truck"
+                            className="inline-block"
+                        />
+                    </>
+                ) : (
+                    <Image
+                        src={icons.walkingMan}
+                        height={20}
+                        width={20}
+                        alt="walking-man"
+                        className="inline-block"
+                    />
+                )}
+            </div>
+        )
+    },
+    "Validation": (row, name) => (<p className={cn('inline-block px-2 py-1 rounded-full text-white font-semibold ', {
+        'bg-green-500': row[name],
+        'bg-yellow-500': !row[name],
+    })}
+    >
+        {row[name] ? 'Validé' : 'En attente'}
+    </p>),
+     'Date de début': (row, name) => <p>{formatDate(row[name])}</p>,
+    'Date de début congé': (row, name) => <p>{formatDate(row[name])}</p>,
+    'Date de fin congé': (row, name) => <p>{formatDate(row[name])}</p>,
+    'Etat' : (row, name) => <p className={cn('inline-block px-2 py-1 rounded-full text-white font-semibold ', {
+        'bg-green-500': row[name],
+        'bg-yellow-500': !row[name],
+    })}>{row[name] ? 'Actif' : 'Inactif'}</p>,
+    "Date de virement": (row, name) => <p>{formatDate(row[name])}</p>,
+    'Justification': (row, name) => <p className={cn('inline-block px-2 py-1 rounded-full text-white font-semibold ', {
+        'bg-green-500': row[name],
+        'bg-yellow-500': !row[name],
+    })}>{row[name] ? 'Justifié' : 'Non-justifié'}</p>,
+    'Date d\'absence': (row, name) => <p>{formatDate(row[name])}</p>,
 };
 
 export default columnRenderers;
\ No newline at end of file
Index: constants/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { CardProps, Column, rowsType, SalesProps, SidebarLink } from '@/types';\r\nimport { Users, SquareArrowLeft, BadgePercent, Truck } from 'lucide-react';\r\nimport { icons } from './icons';\r\n\r\nexport const sidebarLinks: SidebarLink[] = [\r\n  {\r\n    id: '1',\r\n    imgURL: icons.Products,\r\n    route: [\r\n      {\r\n        name: 'Produits',\r\n        link: '/produits',\r\n      },\r\n      {\r\n        name: 'Liste des prix',\r\n        link: '/listePrix',\r\n      },\r\n    ],\r\n    label: 'Produits',\r\n  },\r\n  {\r\n    id: '2',\r\n    imgURL: icons.client,\r\n    route: [\r\n      {\r\n        name: 'Liste des clients',\r\n        link: '/listeClients',\r\n      },\r\n      {\r\n        name: 'Prospection des clients',\r\n        link: '/prospectionClients',\r\n      },\r\n    ],\r\n    label: 'Clients',\r\n  },\r\n  {\r\n    id: '3',\r\n    imgURL: icons.Stock,\r\n    route: [\r\n      {\r\n        name: 'Bons de transfert',\r\n        link: '/entrepots',\r\n      },\r\n      {\r\n        name: 'Bons de transfert',\r\n        link: '/bonsTransfert',\r\n      },\r\n\r\n      {\r\n        name: 'Bons de sortie',\r\n        link: '/bonsSortie',\r\n      },\r\n\r\n      {\r\n        name: 'Bons de retour',\r\n        link: '/bonsRetour',\r\n      },\r\n    ],\r\n    label: 'Stock',\r\n  },\r\n  {\r\n    id: '4',\r\n    imgURL: icons.Sell,\r\n    route: [\r\n      {\r\n        name: 'Bons de commande vente',\r\n        link: '/bons-commande',\r\n      },\r\n      {\r\n        name: 'Bons de devis',\r\n        link: '/bonsDevis',\r\n      },\r\n      \r\n      {\r\n        name: 'Bons de commande kit',\r\n        link: '/bonsCommandeKit',\r\n      },\r\n      {\r\n        name: 'Bons de commande carton',\r\n        link: '/bonsCommandeCarton',\r\n      },\r\n      {\r\n        name: 'Bons de commande PC',\r\n        link: '/bonCommandePC',\r\n      },\r\n      {\r\n        name: 'Bons de commande modifiés',\r\n        link: '/bonsCommandeModifies',\r\n      },\r\n      {\r\n        name: 'Factures',\r\n        link: '/Facture',\r\n      },\r\n      {\r\n        name: 'Bons de comptoire',\r\n        link: '/bonsComptoireVente',\r\n      },\r\n      {\r\n        name: 'Bons de Comptoire modifiés',\r\n        link: '/bonsComptoireModifies',\r\n      },\r\n      {\r\n        name: 'Bons de garantie',\r\n        link: '/bonsGarantie',\r\n      },\r\n      {\r\n        name: 'Produits non livrés',\r\n        link: '/produitsNonLivre',\r\n      },\r\n      {\r\n        name: 'Bons de retour',\r\n        link: '/bonsRetourVente',\r\n      },\r\n    ],\r\n    label: 'Vente',\r\n  },\r\n\r\n  {\r\n    id: '5',\r\n    imgURL: icons.Goal,\r\n    route: [\r\n      {\r\n        name: 'Equipes',\r\n        link: '/equipes',\r\n      },\r\n      {\r\n        name: 'Etat des objectifs',\r\n        link: '/etatObjectifs',\r\n      },\r\n      {\r\n        name: 'Prévision globale',\r\n        link: '/previsionGlobale',\r\n      },\r\n      {\r\n        name: 'Prévisions',\r\n        link: '/previsions',\r\n      },\r\n    ],\r\n    label: 'Objectif',\r\n  },\r\n  {\r\n    id: '6',\r\n    imgURL: icons.Statistic,\r\n    route: [\r\n      {\r\n        name: 'Clients / Produits',\r\n        link: '/cleintsProduits',\r\n      },\r\n\r\n      {\r\n        name: 'Fournisseurs',\r\n        link: '/fourisseursStatistiques',\r\n      },\r\n    ],\r\n    label: 'Statistique',\r\n  },\r\n  {\r\n    id: '7',\r\n    imgURL: icons.Admin,\r\n    route: [\r\n      {\r\n        name: 'Gestion des utilisateurs',\r\n        link: '/utilisateurs',\r\n      },\r\n\r\n\r\n    ],\r\n    label: 'Admin',\r\n  },\r\n];\r\n\r\nexport const sidebarLinksManager = [\r\n  {\r\n    name: 'Produits',\r\n    router: [\r\n      {\r\n        label: 'Produits',\r\n        router: ['Families', 'produits', 'Quantite a facteur', 'List de Produits']\r\n      },\r\n      {\r\n        label: 'Laison',\r\n        router: ['Produits /Entrops']\r\n      },\r\n      {\r\n        label: 'Etat de Stock',\r\n        router: ['Archive de verification', 'Etat Stock', 'verifcation stock']\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Stock',\r\n    router: [\r\n      {\r\n        label: 'entrepots',\r\n        router: ['entrepots', 'repatrition']\r\n      },\r\n      {\r\n        label: 'Mouvements',\r\n        router: [\"Bons entrée\", \"Bons Transfert\", \"Bons Transfert Entre Magasins\", \"Bons Sortie\"]\r\n      },\r\n      {\r\n        label: 'États',\r\n        router: ['Archive de verification', 'Etat Stock', 'verifcation stock']\r\n      },\r\n      {\r\n        label: 'Inventaires',\r\n        router: ['Archive de verification', 'Etat Stock', 'verifcation stock']\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Vente',\r\n    router: [\r\n      {\r\n        label: 'bons-commande',\r\n        router: ['bons-commande', 'Facture']\r\n      },\r\n      \r\n    ]\r\n  }\r\n]\r\n\r\nexport enum AuthType {\r\n  SignIn = 'sign-in',\r\n  SignUp = 'sign-up',\r\n  Bill = 'bill'\r\n}\r\n\r\nexport const infoCard = [\r\n  {\r\n    name: 'CPU',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'MOBO',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'RAM',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'COOLER',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'SSD',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'PSU',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'GPU',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'CASE',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'FAN',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'ÉCRAN',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'SOURIS',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'CLAVIER',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'CASQUE',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'TAPIS',\r\n    total: 23455,\r\n  },\r\n  {\r\n    name: 'CABLES',\r\n    total: 23455,\r\n  },\r\n];\r\n\r\nexport enum QuantityLabels {\r\n  Sold = 'Quantité vendue',\r\n  ForSale = 'Quantité en vente',\r\n  Available = 'Quantité disponible',\r\n}\r\n\r\nexport const cardData: CardProps[] = [\r\n  {\r\n    label: 'Total Bon de Vente',\r\n    amount: '45,231.89',\r\n    description: '+20.1% from last month',\r\n    icon: BadgePercent,\r\n    color: 'text-success-600',\r\n  },\r\n  {\r\n    label: 'Total Bon de Livraison',\r\n    amount: '+2350',\r\n    description: '+180.1% from last month',\r\n    icon: Truck,\r\n    color: 'text-orange-600',\r\n  },\r\n  {\r\n    label: 'Total Bon de Retour',\r\n    amount: '+12,234',\r\n    description: '+19% from last month',\r\n    icon: SquareArrowLeft,\r\n    color: 'text-blue-600',\r\n  },\r\n  {\r\n    label: 'Base Clientèle',\r\n    amount: '+573',\r\n    description: '+201 from last month',\r\n    icon: Users,\r\n    color: 'text-red-600',\r\n  },\r\n];\r\n\r\nexport const userSalesData: SalesProps[] = [\r\n  {\r\n    name: 'Olivia Martin',\r\n    email: 'olivia.martin@email.com',\r\n    salesAmount: '+$1,999.00',\r\n  },\r\n  {\r\n    name: 'Jackson Lee',\r\n    email: 'isabella.nguyen@email.com',\r\n    salesAmount: '+$1,999.00',\r\n  },\r\n  {\r\n    name: 'Isabella Nguyen',\r\n    email: 'isabella.nguyen@email.com',\r\n    salesAmount: '+$39.00',\r\n  },\r\n  {\r\n    name: 'William Kim',\r\n    email: 'will@email.com',\r\n    salesAmount: '+$299.00',\r\n  },\r\n  {\r\n    name: 'Sofia Davis',\r\n    email: 'sofia.davis@email.com',\r\n    salesAmount: '+$39.00',\r\n  },\r\n];\r\n\r\nexport const rowTable: rowsType[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Référence',\r\n    sort: false\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Désignation',\r\n    sort: false\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Quantité',\r\n    sort: true,\r\n    sortBy: 'quantity_globale'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'PV TTC -P-',\r\n    sort: true,\r\n    sortBy: 'prix_vente'\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'PV TTC -R-',\r\n    sort: false\r\n  },\r\n]\r\n\r\nexport const NotesColumn: rowsType[] = [\r\n  {\r\n    id: '1',\r\n    name: \"N° bon\"\r\n  },\r\n  {\r\n    id: '2',\r\n    name: \"Date bon\"\r\n  },\r\n  {\r\n    id: '3',\r\n    name: \"Entrepot bon\"\r\n  },\r\n  {\r\n    id: '4',\r\n    name: \"Client\"\r\n  },\r\n\r\n  {\r\n    id: '5',\r\n    name: \"Livraison\"\r\n  },\r\n  {\r\n    id: '6',\r\n    name: \"Commercial\"\r\n  },\r\n  {\r\n    id: '7',\r\n    name: \"Validation\"\r\n  }\r\n]\r\n\r\nexport const factureColumn: rowsType[] = [\r\n  {\r\n    id: '1',\r\n    name: 'N° facture'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Date facture'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Client'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Bon de livraison associé'\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Etat de règlement'\r\n  },\r\n]\r\n\r\nexport const returnColumn: rowsType[] = [\r\n  {\r\n    id: '1',\r\n    name: 'N° bon'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Date bon'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Entrepot'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Client'\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Bon de vente associé'\r\n  },\r\n  {\r\n    id: '6',\r\n    name: 'Etat d\\'acceptation'\r\n  },\r\n  {\r\n    id: '7',\r\n    name: 'Etat bon'\r\n  },\r\n  {\r\n    id: '8',\r\n    name: 'Etat de règlement bon'\r\n  },\r\n  {\r\n    id: '9',\r\n    name: 'Utilisateur'\r\n  },\r\n]\r\n\r\nexport const clientColumn: rowsType[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Client'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Type de client'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Chiffre d\\'affaire'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Solde'\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Etat de validation'\r\n  },\r\n  {\r\n    id: '6',\r\n    name: 'Documents associés'\r\n  },\r\n  {\r\n    id: '7',\r\n    name: 'Utilisateur'\r\n  }\r\n]\r\n\r\n\r\n\r\nexport const employeeColumn: rowsType[] = [\r\n  {\r\n    id:'1',\r\n    name:'Nom complet'\r\n  },\r\n      {\r\n    id:'2',\r\n    name:'Fonction'\r\n  },\r\n      {\r\n    id:'3',\r\n    name:'Numéro de téléphone'\r\n  },\r\n      {\r\n    id:'4',\r\n    name:'Salaire'\r\n  },\r\n      {\r\n    id:'5',\r\n    name:'Prime Panier et Transport'\r\n  },\r\n      {\r\n    id:'6',\r\n    name:'Actif'\r\n  },\r\n    {\r\n    id:'7',\r\n    name:'Date Début'\r\n  }\r\n]\r\n\r\nexport const reglementColumn: rowsType[] = [\r\n  {\r\n    id:'1',\r\n    name:'Nom complet'\r\n  },\r\n      {\r\n    id:'2',\r\n    name:'Date de début'\r\n  },\r\n      {\r\n    id:'3',\r\n    name:'Date de fin'\r\n  },\r\n      {\r\n    id:'4',\r\n    name:'Montant réglé'\r\n  },\r\n      {\r\n    id:'5',\r\n    name:'Note'\r\n  }\r\n]\r\n\r\nexport const absenceColumn: rowsType[] = [\r\n  {\r\n    id:'1',\r\n    name:'Nom complet'\r\n  },\r\n      {\r\n    id:'2',\r\n    name:'Date d\\'absence'\r\n  },\r\n      {\r\n    id:'3',\r\n    name:'Motif'\r\n  },\r\n      {\r\n    id:'4',\r\n    name:'Ajouté par'\r\n  },\r\n      {\r\n    id:'5',\r\n    name:'Justification'\r\n  }\r\n]\r\n\r\nexport const congeColumn: rowsType[] = [\r\n  {\r\n    id:'1',\r\n    name:'Nom complet'\r\n  },\r\n      {\r\n    id:'2',\r\n    name:'Date de début'\r\n  },\r\n      {\r\n    id:'3',\r\n    name:'Etat'\r\n  },\r\n      {\r\n    id:'4',\r\n    name:'Nombre de jours'\r\n  },\r\n      {\r\n    id:'5',\r\n    name:'Nombre de jours pris'\r\n  },\r\n     {\r\n    id:'6',\r\n    name:'Nombre de jours restant'\r\n  }\r\n]\r\n\r\nexport const congeListColumn: rowsType[] = [\r\n  {\r\n    id:'1',\r\n    name:'Nom complet'\r\n  },\r\n      {\r\n    id:'2',\r\n    name:'Date de début congé'\r\n  },\r\n      {\r\n    id:'3',\r\n    name:'Date de fin congé'\r\n  },\r\n      {\r\n    id:'4',\r\n    name:'Nombre de jours'\r\n  },\r\n      {\r\n    id:'5',\r\n    name:'Nombre de jours pris'\r\n  },\r\n     {\r\n    id:'6',\r\n    name:'Type de congé'\r\n  }\r\n]\r\n\r\nexport const pointageColumn: rowsType[] = [\r\n  {\r\n    id:'1',\r\n    name:'Date de pointage'\r\n  },\r\n      {\r\n    id:'2',\r\n    name:'Nom complet'\r\n  },\r\n      {\r\n    id:'3',\r\n    name:'Heures d\\'arrivée'\r\n  },\r\n      {\r\n    id:'4',\r\n    name:'Heures de départ'\r\n  },\r\n      {\r\n    id:'5',\r\n    name:'Minutes en retard'\r\n  }\r\n]\r\n\r\nexport const StatusOptions: rowsType[]=[  {\r\n\r\n  id: '1',\r\n  name: 'Active',\r\n},\r\n{\r\n  id: '2',\r\n  name: 'Pending',\r\n},\r\n{\r\n  id: '3',\r\n  name: 'Paused',\r\n},]\r\n\r\nexport const userRowsTable: rowsType[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Nom',\r\n    sort: false\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Prénom',\r\n    sort: false\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Rôle',\r\n    sort: false\r\n  }\r\n]\r\nexport const entropsRowsTable: rowsType[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Libellé',\r\n    sort: false\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Adresse',\r\n    sort: false\r\n  }\r\n]\r\n\r\nexport const entropsRows = [\r\n  {\r\n    id: '1',\r\n    name: { name: \"Libellé\" },\r\n    sort: false\r\n  },\r\n  {\r\n    id: '2',\r\n    name: { ville: \"Adresse\" },\r\n    sort: false\r\n  }\r\n]\r\n\r\nexport const keyMapStock = {\r\n  name: \"Libellé\",\r\n  ville: \"Adresse\",\r\n};\r\n\r\nexport const keyMapProduct = {\r\n  reference: \"Référence\",\r\n  name: \"Désignation\",\r\n  quantity_globale: 'Quantité',\r\n  prix_livraison: 'PV TTC -P-',\r\n  prix_achat: 'PV TTC -R-',\r\n};\r\n\r\nexport const keyMapClient = {\r\n  name: \"Client\",\r\n  \"categorie_client.type_desc\": 'Type de client',\r\n  name_user: \"Utilisateur\",\r\n  NifDoc: \"NIF\",\r\n  RCDoc: \"RC\",\r\n  NisDoc: \"NIS\",\r\n  valide:\"Etat de validation\"\r\n\r\n};\r\nexport const keyMapNotes = {\r\n  idBon: \"N° bon\",\r\n  dateBon: \"Date bon\",\r\n  \"entrepot.name\": \"Entrepot bon\",\r\n  \"client.name\": \"Client\",\r\n  Livraison:'agenceLivraison',\r\n  \"client.name_user\": \"Commercial\",\r\n\r\nvalide:'Validation'\r\n\r\n};\r\nexport const keyMapFacterur={\r\ncodeFacture:'N° facture',\r\ndate_facture:'Date facture',\r\n'client.name':'Client',\r\n'BonS.idBon':'Bon de livraison associé',\r\netat_reglement:\"Etat de règlement\"\r\n}\r\n\r\nexport const statusColors: Record<\"Active\" | \"Pending\" | \"Paused\", string> = {\r\n  Active: \"bg-green-500\",\r\n  Pending: \"bg-yellow-500\",\r\n  Paused: \"bg-red-500\",\r\n};\r\nexport const bill = {\r\n  orderNumber: 0,\r\n  orderDate: new Date(),\r\n  AssociatedPurchaseOrder: '',\r\n  warehouse: '',\r\n  Note: '',\r\n}\r\n\r\nexport const actions: Column[] = [{\r\n  id: '1',\r\n  name: 'Edit',\r\n  opensModal: true\r\n}, {\r\n  id: '2',\r\n  name: 'View',\r\n  opensModal: true\r\n},\r\n{\r\n  id: '3',\r\n  name: 'Delete',\r\n  opensModal: true\r\n}]\r\n\r\nexport const status: Column[] = [{ id: '1', name: 'banque' }, { id: '2', name: 'CPP' }]\r\n\r\nexport const defaultValuesSignIn: Record<string, any> = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\n
===================================================================
diff --git a/constants/index.ts b/constants/index.ts
--- a/constants/index.ts	(revision 278e15b7feeb1e81c611c209880532be37a20951)
+++ b/constants/index.ts	(date 1736351795655)
@@ -1,801 +1,860 @@
-import { CardProps, Column, rowsType, SalesProps, SidebarLink } from '@/types';
-import { Users, SquareArrowLeft, BadgePercent, Truck } from 'lucide-react';
-import { icons } from './icons';
+import {CardProps, Column, rowsType, SalesProps, SidebarLink} from '@/types';
+import {Users, SquareArrowLeft, BadgePercent, Truck} from 'lucide-react';
+import {icons} from './icons';
 
 export const sidebarLinks: SidebarLink[] = [
-  {
-    id: '1',
-    imgURL: icons.Products,
-    route: [
-      {
-        name: 'Produits',
-        link: '/produits',
-      },
-      {
-        name: 'Liste des prix',
-        link: '/listePrix',
-      },
-    ],
-    label: 'Produits',
-  },
-  {
-    id: '2',
-    imgURL: icons.client,
-    route: [
-      {
-        name: 'Liste des clients',
-        link: '/listeClients',
-      },
-      {
-        name: 'Prospection des clients',
-        link: '/prospectionClients',
-      },
-    ],
-    label: 'Clients',
-  },
-  {
-    id: '3',
-    imgURL: icons.Stock,
-    route: [
-      {
-        name: 'Bons de transfert',
-        link: '/entrepots',
-      },
-      {
-        name: 'Bons de transfert',
-        link: '/bonsTransfert',
-      },
+    {
+        id: '1',
+        imgURL: icons.Products,
+        route: [
+            {
+                name: 'Produits',
+                link: '/produits',
+            },
+            {
+                name: 'Liste des prix',
+                link: '/listePrix',
+            },
+        ],
+        label: 'Produits',
+    },
+    {
+        id: '2',
+        imgURL: icons.client,
+        route: [
+            {
+                name: 'Liste des clients',
+                link: '/listeClients',
+            },
+            {
+                name: 'Prospection des clients',
+                link: '/prospectionClients',
+            },
+        ],
+        label: 'Clients',
+    },
+    {
+        id: '3',
+        imgURL: icons.Stock,
+        route: [
+            {
+                name: 'Bons de transfert',
+                link: '/entrepots',
+            },
+            {
+                name: 'Bons de transfert',
+                link: '/bonsTransfert',
+            },
 
-      {
-        name: 'Bons de sortie',
-        link: '/bonsSortie',
-      },
+            {
+                name: 'Bons de sortie',
+                link: '/bonsSortie',
+            },
 
-      {
-        name: 'Bons de retour',
-        link: '/bonsRetour',
-      },
-    ],
-    label: 'Stock',
-  },
-  {
-    id: '4',
-    imgURL: icons.Sell,
-    route: [
-      {
-        name: 'Bons de commande vente',
-        link: '/bons-commande',
-      },
-      {
-        name: 'Bons de devis',
-        link: '/bonsDevis',
-      },
-      
-      {
-        name: 'Bons de commande kit',
-        link: '/bonsCommandeKit',
-      },
-      {
-        name: 'Bons de commande carton',
-        link: '/bonsCommandeCarton',
-      },
-      {
-        name: 'Bons de commande PC',
-        link: '/bonCommandePC',
-      },
-      {
-        name: 'Bons de commande modifiés',
-        link: '/bonsCommandeModifies',
-      },
-      {
-        name: 'Factures',
-        link: '/Facture',
-      },
-      {
-        name: 'Bons de comptoire',
-        link: '/bonsComptoireVente',
-      },
-      {
-        name: 'Bons de Comptoire modifiés',
-        link: '/bonsComptoireModifies',
-      },
-      {
-        name: 'Bons de garantie',
-        link: '/bonsGarantie',
-      },
-      {
-        name: 'Produits non livrés',
-        link: '/produitsNonLivre',
-      },
-      {
-        name: 'Bons de retour',
-        link: '/bonsRetourVente',
-      },
-    ],
-    label: 'Vente',
-  },
+            {
+                name: 'Bons de retour',
+                link: '/bonsRetour',
+            },
+        ],
+        label: 'Stock',
+    },
+    {
+        id: '4',
+        imgURL: icons.Sell,
+        route: [
+            {
+                name: 'Bons de commande vente',
+                link: '/bons-commande',
+            },
+            {
+                name: 'Bons de devis',
+                link: '/bonsDevis',
+            },
+
+            {
+                name: 'Bons de commande kit',
+                link: '/bonsCommandeKit',
+            },
+            {
+                name: 'Bons de commande carton',
+                link: '/bonsCommandeCarton',
+            },
+            {
+                name: 'Bons de commande PC',
+                link: '/bonCommandePC',
+            },
+            {
+                name: 'Bons de commande modifiés',
+                link: '/bonsCommandeModifies',
+            },
+            {
+                name: 'Factures',
+                link: '/Facture',
+            },
+            {
+                name: 'Bons de comptoire',
+                link: '/bonsComptoireVente',
+            },
+            {
+                name: 'Bons de Comptoire modifiés',
+                link: '/bonsComptoireModifies',
+            },
+            {
+                name: 'Bons de garantie',
+                link: '/bonsGarantie',
+            },
+            {
+                name: 'Produits non livrés',
+                link: '/produitsNonLivre',
+            },
+            {
+                name: 'Bons de retour',
+                link: '/bonsRetourVente',
+            },
+        ],
+        label: 'Vente',
+    },
 
-  {
-    id: '5',
-    imgURL: icons.Goal,
-    route: [
-      {
-        name: 'Equipes',
-        link: '/equipes',
-      },
-      {
-        name: 'Etat des objectifs',
-        link: '/etatObjectifs',
-      },
-      {
-        name: 'Prévision globale',
-        link: '/previsionGlobale',
-      },
-      {
-        name: 'Prévisions',
-        link: '/previsions',
-      },
-    ],
-    label: 'Objectif',
-  },
-  {
-    id: '6',
-    imgURL: icons.Statistic,
-    route: [
-      {
-        name: 'Clients / Produits',
-        link: '/cleintsProduits',
-      },
+    {
+        id: '5',
+        imgURL: icons.Goal,
+        route: [
+            {
+                name: 'Equipes',
+                link: '/equipes',
+            },
+            {
+                name: 'Etat des objectifs',
+                link: '/etatObjectifs',
+            },
+            {
+                name: 'Prévision globale',
+                link: '/previsionGlobale',
+            },
+            {
+                name: 'Prévisions',
+                link: '/previsions',
+            },
+        ],
+        label: 'Objectif',
+    },
+    {
+        id: '6',
+        imgURL: icons.Statistic,
+        route: [
+            {
+                name: 'Clients / Produits',
+                link: '/cleintsProduits',
+            },
 
-      {
-        name: 'Fournisseurs',
-        link: '/fourisseursStatistiques',
-      },
-    ],
-    label: 'Statistique',
-  },
-  {
-    id: '7',
-    imgURL: icons.Admin,
-    route: [
-      {
-        name: 'Gestion des utilisateurs',
-        link: '/utilisateurs',
-      },
+            {
+                name: 'Fournisseurs',
+                link: '/fourisseursStatistiques',
+            },
+        ],
+        label: 'Statistique',
+    },
+    {
+        id: '7',
+        imgURL: icons.Admin,
+        route: [
+            {
+                name: 'Gestion des utilisateurs',
+                link: '/utilisateurs',
+            },
 
 
-    ],
-    label: 'Admin',
-  },
+        ],
+        label: 'Admin',
+    },
 ];
 
 export const sidebarLinksManager = [
-  {
-    name: 'Produits',
-    router: [
-      {
-        label: 'Produits',
-        router: ['Families', 'produits', 'Quantite a facteur', 'List de Produits']
-      },
-      {
-        label: 'Laison',
-        router: ['Produits /Entrops']
-      },
-      {
-        label: 'Etat de Stock',
-        router: ['Archive de verification', 'Etat Stock', 'verifcation stock']
-      }
-    ]
-  },
-  {
-    name: 'Stock',
-    router: [
-      {
-        label: 'entrepots',
-        router: ['entrepots', 'repatrition']
-      },
-      {
-        label: 'Mouvements',
-        router: ["Bons entrée", "Bons Transfert", "Bons Transfert Entre Magasins", "Bons Sortie"]
-      },
-      {
-        label: 'États',
-        router: ['Archive de verification', 'Etat Stock', 'verifcation stock']
-      },
-      {
-        label: 'Inventaires',
-        router: ['Archive de verification', 'Etat Stock', 'verifcation stock']
-      }
-    ]
-  },
-  {
-    name: 'Vente',
-    router: [
-      {
-        label: 'bons-commande',
-        router: ['bons-commande', 'Facture']
-      },
-      
-    ]
-  }
+    {
+        name: 'Produits',
+        router: [
+            {
+                label: 'Produits',
+                router: ['Families', 'produits', 'Quantite a facteur', 'List de Produits']
+            },
+            {
+                label: 'Laison',
+                router: ['Produits /Entrops']
+            },
+            {
+                label: 'Etat de Stock',
+                router: ['Archive de verification', 'Etat Stock', 'verifcation stock']
+            }
+        ]
+    },
+    {
+        name: 'Stock',
+        router: [
+            {
+                label: 'entrepots',
+                router: ['entrepots', 'repatrition']
+            },
+            {
+                label: 'Mouvements',
+                router: ["Bons entrée", "Bons Transfert", "Bons Transfert Entre Magasins", "Bons Sortie"]
+            },
+            {
+                label: 'États',
+                router: ['Archive de verification', 'Etat Stock', 'verifcation stock']
+            },
+            {
+                label: 'Inventaires',
+                router: ['Archive de verification', 'Etat Stock', 'verifcation stock']
+            }
+        ]
+    },
+    {
+        name: 'Vente',
+        router: [
+            {
+                label: 'bons-commande',
+                router: ['bons-commande', 'Facture']
+            },
+
+        ]
+    }
 ]
 
 export enum AuthType {
-  SignIn = 'sign-in',
-  SignUp = 'sign-up',
-  Bill = 'bill'
+    SignIn = 'sign-in',
+    SignUp = 'sign-up',
+    Bill = 'bill'
 }
 
 export const infoCard = [
-  {
-    name: 'CPU',
-    total: 23455,
-  },
-  {
-    name: 'MOBO',
-    total: 23455,
-  },
-  {
-    name: 'RAM',
-    total: 23455,
-  },
-  {
-    name: 'COOLER',
-    total: 23455,
-  },
-  {
-    name: 'SSD',
-    total: 23455,
-  },
-  {
-    name: 'PSU',
-    total: 23455,
-  },
-  {
-    name: 'GPU',
-    total: 23455,
-  },
-  {
-    name: 'CASE',
-    total: 23455,
-  },
-  {
-    name: 'FAN',
-    total: 23455,
-  },
-  {
-    name: 'ÉCRAN',
-    total: 23455,
-  },
-  {
-    name: 'SOURIS',
-    total: 23455,
-  },
-  {
-    name: 'CLAVIER',
-    total: 23455,
-  },
-  {
-    name: 'CASQUE',
-    total: 23455,
-  },
-  {
-    name: 'TAPIS',
-    total: 23455,
-  },
-  {
-    name: 'CABLES',
-    total: 23455,
-  },
+    {
+        name: 'CPU',
+        total: 23455,
+    },
+    {
+        name: 'MOBO',
+        total: 23455,
+    },
+    {
+        name: 'RAM',
+        total: 23455,
+    },
+    {
+        name: 'COOLER',
+        total: 23455,
+    },
+    {
+        name: 'SSD',
+        total: 23455,
+    },
+    {
+        name: 'PSU',
+        total: 23455,
+    },
+    {
+        name: 'GPU',
+        total: 23455,
+    },
+    {
+        name: 'CASE',
+        total: 23455,
+    },
+    {
+        name: 'FAN',
+        total: 23455,
+    },
+    {
+        name: 'ÉCRAN',
+        total: 23455,
+    },
+    {
+        name: 'SOURIS',
+        total: 23455,
+    },
+    {
+        name: 'CLAVIER',
+        total: 23455,
+    },
+    {
+        name: 'CASQUE',
+        total: 23455,
+    },
+    {
+        name: 'TAPIS',
+        total: 23455,
+    },
+    {
+        name: 'CABLES',
+        total: 23455,
+    },
 ];
 
 export enum QuantityLabels {
-  Sold = 'Quantité vendue',
-  ForSale = 'Quantité en vente',
-  Available = 'Quantité disponible',
+    Sold = 'Quantité vendue',
+    ForSale = 'Quantité en vente',
+    Available = 'Quantité disponible',
 }
 
 export const cardData: CardProps[] = [
-  {
-    label: 'Total Bon de Vente',
-    amount: '45,231.89',
-    description: '+20.1% from last month',
-    icon: BadgePercent,
-    color: 'text-success-600',
-  },
-  {
-    label: 'Total Bon de Livraison',
-    amount: '+2350',
-    description: '+180.1% from last month',
-    icon: Truck,
-    color: 'text-orange-600',
-  },
-  {
-    label: 'Total Bon de Retour',
-    amount: '+12,234',
-    description: '+19% from last month',
-    icon: SquareArrowLeft,
-    color: 'text-blue-600',
-  },
-  {
-    label: 'Base Clientèle',
-    amount: '+573',
-    description: '+201 from last month',
-    icon: Users,
-    color: 'text-red-600',
-  },
+    {
+        label: 'Total Bon de Vente',
+        amount: '45,231.89',
+        description: '+20.1% from last month',
+        icon: BadgePercent,
+        color: 'text-success-600',
+    },
+    {
+        label: 'Total Bon de Livraison',
+        amount: '+2350',
+        description: '+180.1% from last month',
+        icon: Truck,
+        color: 'text-orange-600',
+    },
+    {
+        label: 'Total Bon de Retour',
+        amount: '+12,234',
+        description: '+19% from last month',
+        icon: SquareArrowLeft,
+        color: 'text-blue-600',
+    },
+    {
+        label: 'Base Clientèle',
+        amount: '+573',
+        description: '+201 from last month',
+        icon: Users,
+        color: 'text-red-600',
+    },
 ];
 
 export const userSalesData: SalesProps[] = [
-  {
-    name: 'Olivia Martin',
-    email: 'olivia.martin@email.com',
-    salesAmount: '+$1,999.00',
-  },
-  {
-    name: 'Jackson Lee',
-    email: 'isabella.nguyen@email.com',
-    salesAmount: '+$1,999.00',
-  },
-  {
-    name: 'Isabella Nguyen',
-    email: 'isabella.nguyen@email.com',
-    salesAmount: '+$39.00',
-  },
-  {
-    name: 'William Kim',
-    email: 'will@email.com',
-    salesAmount: '+$299.00',
-  },
-  {
-    name: 'Sofia Davis',
-    email: 'sofia.davis@email.com',
-    salesAmount: '+$39.00',
-  },
+    {
+        name: 'Olivia Martin',
+        email: 'olivia.martin@email.com',
+        salesAmount: '+$1,999.00',
+    },
+    {
+        name: 'Jackson Lee',
+        email: 'isabella.nguyen@email.com',
+        salesAmount: '+$1,999.00',
+    },
+    {
+        name: 'Isabella Nguyen',
+        email: 'isabella.nguyen@email.com',
+        salesAmount: '+$39.00',
+    },
+    {
+        name: 'William Kim',
+        email: 'will@email.com',
+        salesAmount: '+$299.00',
+    },
+    {
+        name: 'Sofia Davis',
+        email: 'sofia.davis@email.com',
+        salesAmount: '+$39.00',
+    },
 ];
 
 export const rowTable: rowsType[] = [
-  {
-    id: '1',
-    name: 'Référence',
-    sort: false
-  },
-  {
-    id: '2',
-    name: 'Désignation',
-    sort: false
-  },
-  {
-    id: '3',
-    name: 'Quantité',
-    sort: true,
-    sortBy: 'quantity_globale'
-  },
-  {
-    id: '4',
-    name: 'PV TTC -P-',
-    sort: true,
-    sortBy: 'prix_vente'
-  },
-  {
-    id: '5',
-    name: 'PV TTC -R-',
-    sort: false
-  },
+    {
+        id: '1',
+        name: 'Référence',
+        sort: false
+    },
+    {
+        id: '2',
+        name: 'Désignation',
+        sort: false
+    },
+    {
+        id: '3',
+        name: 'Quantité',
+        sort: true,
+        sortBy: 'quantity_globale'
+    },
+    {
+        id: '4',
+        name: 'PV TTC -P-',
+        sort: true,
+        sortBy: 'prix_vente'
+    },
+    {
+        id: '5',
+        name: 'PV TTC -R-',
+        sort: false
+    },
 ]
 
 export const NotesColumn: rowsType[] = [
-  {
-    id: '1',
-    name: "N° bon"
-  },
-  {
-    id: '2',
-    name: "Date bon"
-  },
-  {
-    id: '3',
-    name: "Entrepot bon"
-  },
-  {
-    id: '4',
-    name: "Client"
-  },
+    {
+        id: '1',
+        name: "N° bon"
+    },
+    {
+        id: '2',
+        name: "Date bon"
+    },
+    {
+        id: '3',
+        name: "Entrepot bon"
+    },
+    {
+        id: '4',
+        name: "Client"
+    },
 
-  {
-    id: '5',
-    name: "Livraison"
-  },
-  {
-    id: '6',
-    name: "Commercial"
-  },
-  {
-    id: '7',
-    name: "Validation"
-  }
+    {
+        id: '5',
+        name: "Livraison"
+    },
+    {
+        id: '6',
+        name: "Commercial"
+    },
+    {
+        id: '7',
+        name: "Validation"
+    }
 ]
 
 export const factureColumn: rowsType[] = [
-  {
-    id: '1',
-    name: 'N° facture'
-  },
-  {
-    id: '2',
-    name: 'Date facture'
-  },
-  {
-    id: '3',
-    name: 'Client'
-  },
-  {
-    id: '4',
-    name: 'Bon de livraison associé'
-  },
-  {
-    id: '5',
-    name: 'Etat de règlement'
-  },
+    {
+        id: '1',
+        name: 'N° facture'
+    },
+    {
+        id: '2',
+        name: 'Date facture'
+    },
+    {
+        id: '3',
+        name: 'Client'
+    },
+    {
+        id: '4',
+        name: 'Bon de livraison associé'
+    },
+    {
+        id: '5',
+        name: 'Etat de règlement'
+    },
 ]
 
 export const returnColumn: rowsType[] = [
-  {
-    id: '1',
-    name: 'N° bon'
-  },
-  {
-    id: '2',
-    name: 'Date bon'
-  },
-  {
-    id: '3',
-    name: 'Entrepot'
-  },
-  {
-    id: '4',
-    name: 'Client'
-  },
-  {
-    id: '5',
-    name: 'Bon de vente associé'
-  },
-  {
-    id: '6',
-    name: 'Etat d\'acceptation'
-  },
-  {
-    id: '7',
-    name: 'Etat bon'
-  },
-  {
-    id: '8',
-    name: 'Etat de règlement bon'
-  },
-  {
-    id: '9',
-    name: 'Utilisateur'
-  },
+    {
+        id: '1',
+        name: 'N° bon'
+    },
+    {
+        id: '2',
+        name: 'Date bon'
+    },
+    {
+        id: '3',
+        name: 'Entrepot'
+    },
+    {
+        id: '4',
+        name: 'Client'
+    },
+    {
+        id: '5',
+        name: 'Bon de vente associé'
+    },
+    {
+        id: '6',
+        name: 'Etat d\'acceptation'
+    },
+    {
+        id: '7',
+        name: 'Etat bon'
+    },
+    {
+        id: '8',
+        name: 'Etat de règlement bon'
+    },
+    {
+        id: '9',
+        name: 'Utilisateur'
+    },
 ]
 
 export const clientColumn: rowsType[] = [
-  {
-    id: '1',
-    name: 'Client'
-  },
-  {
-    id: '2',
-    name: 'Type de client'
-  },
-  {
-    id: '3',
-    name: 'Chiffre d\'affaire'
-  },
-  {
-    id: '4',
-    name: 'Solde'
-  },
-  {
-    id: '5',
-    name: 'Etat de validation'
-  },
-  {
-    id: '6',
-    name: 'Documents associés'
-  },
-  {
-    id: '7',
-    name: 'Utilisateur'
-  }
+    {
+        id: '1',
+        name: 'Client'
+    },
+    {
+        id: '2',
+        name: 'Type de client'
+    },
+    {
+        id: '3',
+        name: 'Chiffre d\'affaire'
+    },
+    {
+        id: '4',
+        name: 'Solde'
+    },
+    {
+        id: '5',
+        name: 'Etat de validation'
+    },
+    {
+        id: '6',
+        name: 'Documents associés'
+    },
+    {
+        id: '7',
+        name: 'Utilisateur'
+    }
 ]
 
 
-
 export const employeeColumn: rowsType[] = [
-  {
-    id:'1',
-    name:'Nom complet'
-  },
-      {
-    id:'2',
-    name:'Fonction'
-  },
-      {
-    id:'3',
-    name:'Numéro de téléphone'
-  },
-      {
-    id:'4',
-    name:'Salaire'
-  },
-      {
-    id:'5',
-    name:'Prime Panier et Transport'
-  },
-      {
-    id:'6',
-    name:'Actif'
-  },
+    {
+        id: '1',
+        name: 'Nom complet'
+    },
+    {
+        id: '2',
+        name: 'Fonction'
+    },
+    {
+        id: '3',
+        name: 'Numéro de téléphone'
+    },
+    {
+        id: '4',
+        name: 'Salaire'
+    },
+    {
+        id: '5',
+        name: 'Prime Panier et Transport'
+    },
+    {
+        id: '6',
+        name: 'Actif'
+    },
     {
-    id:'7',
-    name:'Date Début'
-  }
+        id: '7',
+        name: 'Date Début'
+    }
 ]
 
 export const reglementColumn: rowsType[] = [
-  {
-    id:'1',
-    name:'Nom complet'
-  },
-      {
-    id:'2',
-    name:'Date de début'
-  },
-      {
-    id:'3',
-    name:'Date de fin'
-  },
-      {
-    id:'4',
-    name:'Montant réglé'
-  },
-      {
-    id:'5',
-    name:'Note'
-  }
+    {
+        id: '1',
+        name: 'Nom complet'
+    },
+    {
+        id: '2',
+        name: 'Date de début'
+    },
+    {
+        id: '3',
+        name: 'Date de fin'
+    },
+    {
+        id: '4',
+        name: 'Montant réglé'
+    },
+    {
+        id: '5',
+        name: 'Note'
+    }
 ]
 
 export const absenceColumn: rowsType[] = [
-  {
-    id:'1',
-    name:'Nom complet'
-  },
-      {
-    id:'2',
-    name:'Date d\'absence'
-  },
-      {
-    id:'3',
-    name:'Motif'
-  },
-      {
-    id:'4',
-    name:'Ajouté par'
-  },
-      {
-    id:'5',
-    name:'Justification'
-  }
+    {
+        id: '1',
+        name: 'Nom complet'
+    },
+    {
+        id: '2',
+        name: 'Date d\'absence'
+    },
+    {
+        id: '3',
+        name: 'Motif'
+    },
+    {
+        id: '4',
+        name: 'Ajouté par'
+    },
+    {
+        id: '5',
+        name: 'Justification'
+    }
 ]
 
 export const congeColumn: rowsType[] = [
-  {
-    id:'1',
-    name:'Nom complet'
-  },
-      {
-    id:'2',
-    name:'Date de début'
-  },
-      {
-    id:'3',
-    name:'Etat'
-  },
-      {
-    id:'4',
-    name:'Nombre de jours'
-  },
-      {
-    id:'5',
-    name:'Nombre de jours pris'
-  },
-     {
-    id:'6',
-    name:'Nombre de jours restant'
-  }
+    {
+        id: '1',
+        name: 'Nom complet'
+    },
+    {
+        id: '2',
+        name: 'Date de début'
+    },
+    {
+        id: '3',
+        name: 'Etat'
+    },
+    {
+        id: '4',
+        name: 'Nombre de jours'
+    },
+    {
+        id: '5',
+        name: 'Nombre de jours pris'
+    },
+    {
+        id: '6',
+        name: 'Nombre de jours restant'
+    }
 ]
 
 export const congeListColumn: rowsType[] = [
-  {
-    id:'1',
-    name:'Nom complet'
-  },
-      {
-    id:'2',
-    name:'Date de début congé'
-  },
-      {
-    id:'3',
-    name:'Date de fin congé'
-  },
-      {
-    id:'4',
-    name:'Nombre de jours'
-  },
-      {
-    id:'5',
-    name:'Nombre de jours pris'
-  },
-     {
-    id:'6',
-    name:'Type de congé'
-  }
+    {
+        id: '1',
+        name: 'Nom complet'
+    },
+    {
+        id: '2',
+        name: 'Date de début congé'
+    },
+    {
+        id: '3',
+        name: 'Date de fin congé'
+    },
+    {
+        id: '4',
+        name: 'Nombre de jours'
+    },
+    {
+        id: '5',
+        name: 'Nombre de jours pris'
+    },
+    {
+        id: '6',
+        name: 'Type de congé'
+    }
 ]
 
 export const pointageColumn: rowsType[] = [
-  {
-    id:'1',
-    name:'Date de pointage'
-  },
-      {
-    id:'2',
-    name:'Nom complet'
-  },
-      {
-    id:'3',
-    name:'Heures d\'arrivée'
-  },
-      {
-    id:'4',
-    name:'Heures de départ'
-  },
-      {
-    id:'5',
-    name:'Minutes en retard'
-  }
+    {
+        id: '1',
+        name: 'Date de pointage'
+    },
+    {
+        id: '2',
+        name: 'Nom complet'
+    },
+    {
+        id: '3',
+        name: 'Heures d\'arrivée'
+    },
+    {
+        id: '4',
+        name: 'Heures de départ'
+    },
+    {
+        id: '5',
+        name: 'Minutes en retard'
+    }
 ]
 
-export const StatusOptions: rowsType[]=[  {
+export const avanceSalaireColumn: rowsType[] = [
+        {
+            id: '1',
+            name: 'Nom complet'
+        },
+        {
+            id: '2',
+            name: 'Date de virement'
+        },
+        {
+            id: '3',
+            name: 'Montant'
+        },
+        {
+            id: '4',
+            name: 'Motif'
+        }
+    ]
+
+export const StatusOptions: rowsType[] = [{
 
-  id: '1',
-  name: 'Active',
+    id: '1',
+    name: 'Active',
 },
-{
-  id: '2',
-  name: 'Pending',
-},
-{
-  id: '3',
-  name: 'Paused',
-},]
+    {
+        id: '2',
+        name: 'Pending',
+    },
+    {
+        id: '3',
+        name: 'Paused',
+    },]
 
 export const userRowsTable: rowsType[] = [
-  {
-    id: '1',
-    name: 'Nom',
-    sort: false
-  },
-  {
-    id: '2',
-    name: 'Prénom',
-    sort: false
-  },
-  {
-    id: '3',
-    name: 'Rôle',
-    sort: false
-  }
+    {
+        id: '1',
+        name: 'Nom',
+        sort: false
+    },
+    {
+        id: '2',
+        name: 'Prénom',
+        sort: false
+    },
+    {
+        id: '3',
+        name: 'Rôle',
+        sort: false
+    }
 ]
 export const entropsRowsTable: rowsType[] = [
-  {
-    id: '1',
-    name: 'Libellé',
-    sort: false
-  },
-  {
-    id: '2',
-    name: 'Adresse',
-    sort: false
-  }
+    {
+        id: '1',
+        name: 'Libellé',
+        sort: false
+    },
+    {
+        id: '2',
+        name: 'Adresse',
+        sort: false
+    }
 ]
 
 export const entropsRows = [
-  {
-    id: '1',
-    name: { name: "Libellé" },
-    sort: false
-  },
-  {
-    id: '2',
-    name: { ville: "Adresse" },
-    sort: false
-  }
+    {
+        id: '1',
+        name: {name: "Libellé"},
+        sort: false
+    },
+    {
+        id: '2',
+        name: {ville: "Adresse"},
+        sort: false
+    }
 ]
 
 export const keyMapStock = {
-  name: "Libellé",
-  ville: "Adresse",
+    name: "Libellé",
+    ville: "Adresse",
 };
 
 export const keyMapProduct = {
-  reference: "Référence",
-  name: "Désignation",
-  quantity_globale: 'Quantité',
-  prix_livraison: 'PV TTC -P-',
-  prix_achat: 'PV TTC -R-',
+    reference: "Référence",
+    name: "Désignation",
+    quantity_globale: 'Quantité',
+    prix_livraison: 'PV TTC -P-',
+    prix_achat: 'PV TTC -R-',
 };
 
 export const keyMapClient = {
-  name: "Client",
-  "categorie_client.type_desc": 'Type de client',
-  name_user: "Utilisateur",
-  NifDoc: "NIF",
-  RCDoc: "RC",
-  NisDoc: "NIS",
-  valide:"Etat de validation"
+    name: "Client",
+    "categorie_client.type_desc": 'Type de client',
+    name_user: "Utilisateur",
+    NifDoc: "NIF",
+    RCDoc: "RC",
+    NisDoc: "NIS",
+    valide: "Etat de validation"
 
 };
 export const keyMapNotes = {
-  idBon: "N° bon",
-  dateBon: "Date bon",
-  "entrepot.name": "Entrepot bon",
-  "client.name": "Client",
-  Livraison:'agenceLivraison',
-  "client.name_user": "Commercial",
-
-valide:'Validation'
+    idBon: "N° bon",
+    dateBon: "Date bon",
+    "entrepot.name": "Entrepot bon",
+    "client.name": "Client",
+    Livraison: 'agenceLivraison',
+    "client.name_user": "Commercial",
+    valide: 'Validation'
 
 };
-export const keyMapFacterur={
-codeFacture:'N° facture',
-date_facture:'Date facture',
-'client.name':'Client',
-'BonS.idBon':'Bon de livraison associé',
-etat_reglement:"Etat de règlement"
+export const keyMapFacterur = {
+    codeFacture: 'N° facture',
+    date_facture: 'Date facture',
+    'client.name': 'Client',
+    'BonS.idBon': 'Bon de livraison associé',
+    etat_reglement: "Etat de règlement"
+};
+export const keyMapListConge = {
+    "salarie.nom": 'Nom complet',
+    dateDebut: 'Date de début congé',
+    dateFin: 'Date de fin congé',
+    NbrJour: 'Nombre de jours',
+    nbrJourPris: 'Nombre de jours pris',
+    type_conge: 'Type de congé'
+}
+
+export const keyMapEtatConge = {
+    "salarie.nom": 'Nom complet',
+    dateDebut: 'Date de début',
+    "salarie.actif": 'Etat',
+    NbrJour: 'Nombre de jours',
+    nbrJourPris: 'Nombre de jours pris',
+    nbrJourRestant: 'Nombre de jours restant'
+}
+
+export const keyMapAbsence = {
+    "salarie.nom": 'Nom complet',
+    date: 'Date d\'absence',
+    motif: 'Motif',
+    "user.username": 'Ajouté par',
+    justifie: 'Justification'
+}
+
+export const keyMapReglement = {
+    "salarie.nom": 'Nom complet',
+    dateDebut: 'Date de début',
+    dateFin: 'Date de fin',
+    montant: 'Montant réglé',
+    note: 'Note'
+}
+
+
+
+export const keyMapAvanceSalaire = {
+    "salarie.nom": 'Nom complet',
+    date: 'Date de virement',
+    montant: 'Montant',
+    motif: 'Motif'
 }
 
 export const statusColors: Record<"Active" | "Pending" | "Paused", string> = {
-  Active: "bg-green-500",
-  Pending: "bg-yellow-500",
-  Paused: "bg-red-500",
+    Active: "bg-green-500",
+    Pending: "bg-yellow-500",
+    Paused: "bg-red-500",
 };
 export const bill = {
-  orderNumber: 0,
-  orderDate: new Date(),
-  AssociatedPurchaseOrder: '',
-  warehouse: '',
-  Note: '',
+    orderNumber: 0,
+    orderDate: new Date(),
+    AssociatedPurchaseOrder: '',
+    warehouse: '',
+    Note: '',
 }
 
 export const actions: Column[] = [{
-  id: '1',
-  name: 'Edit',
-  opensModal: true
+    id: '1',
+    name: 'Edit',
+    opensModal: true
 }, {
-  id: '2',
-  name: 'View',
-  opensModal: true
+    id: '2',
+    name: 'View',
+    opensModal: true
 },
-{
-  id: '3',
-  name: 'Delete',
-  opensModal: true
-}]
+    {
+        id: '3',
+        name: 'Delete',
+        opensModal: true
+    }]
 
-export const status: Column[] = [{ id: '1', name: 'banque' }, { id: '2', name: 'CPP' }]
+export const status: Column[] = [{id: '1', name: 'banque'}, {id: '2', name: 'CPP'}]
 
 export const defaultValuesSignIn: Record<string, any> = {
-  username: "",
-  password: "",
+    username: "",
+    password: "",
 };
 
Index: app/(root)/(links)/(gestionRH)/etatConge/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use client'\r\nimport {DataTable} from \"@/components/data-table\";\r\nimport {useFiltersContext} from \"@/lib/context/Filters\";\r\nimport {congeColumn} from \"@/constants\";\r\nimport {useQuery} from \"@tanstack/react-query\";\r\nimport {getConge} from \"@/service/RHService\";\r\n\r\nfunction Page() {\r\n    const {\r\n        page,\r\n        setPage,\r\n        search,\r\n        setSearch\r\n    } = useFiltersContext();\r\n\r\n    const {isLoading, data: congeData} = useQuery({\r\n        queryKey: [page, search],\r\n        queryFn: getConge\r\n    });\r\n\r\n    const resultsConge = congeData?.results;\r\n    const totalPages = congeData?.total_pages;\r\n\r\n    return (\r\n        <section className=\"page-design py-0\">\r\n            <h1 className=\"text-4xl font-bold p-2\">Situations des congés</h1>\r\n            <DataTable\r\n                columnNames={congeColumn} columnData={resultsConge} setSearch={setSearch} currentPage={page}\r\n                setCurrentPage={setPage} totalPages={totalPages} isLoading={isLoading}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Page
===================================================================
diff --git a/app/(root)/(links)/(gestionRH)/etatConge/page.tsx b/app/(root)/(links)/(gestionRH)/etatConge/page.tsx
--- a/app/(root)/(links)/(gestionRH)/etatConge/page.tsx	(revision 278e15b7feeb1e81c611c209880532be37a20951)
+++ b/app/(root)/(links)/(gestionRH)/etatConge/page.tsx	(date 1736349601091)
@@ -1,9 +1,10 @@
 'use client'
 import {DataTable} from "@/components/data-table";
 import {useFiltersContext} from "@/lib/context/Filters";
-import {congeColumn} from "@/constants";
+import {congeColumn, keyMapEtatConge} from "@/constants";
 import {useQuery} from "@tanstack/react-query";
 import {getConge} from "@/service/RHService";
+import {transformNestedData} from "@/lib/utils";
 
 function Page() {
     const {
@@ -20,12 +21,13 @@
 
     const resultsConge = congeData?.results;
     const totalPages = congeData?.total_pages;
+    const transformedData= transformNestedData(resultsConge, keyMapEtatConge)
 
     return (
         <section className="page-design py-0">
             <h1 className="text-4xl font-bold p-2">Situations des congés</h1>
             <DataTable
-                columnNames={congeColumn} columnData={resultsConge} setSearch={setSearch} currentPage={page}
+                columnNames={congeColumn} columnData={transformedData} setSearch={setSearch} currentPage={page}
                 setCurrentPage={setPage} totalPages={totalPages} isLoading={isLoading}
             />
         </section>
Index: app/(root)/(links)/(gestionRH)/Absence/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use client'\r\nimport {DataTable} from \"@/components/data-table\";\r\nimport {useFiltersContext} from \"@/lib/context/Filters\";\r\nimport {absenceColumn} from \"@/constants\";\r\nimport {useQuery} from \"@tanstack/react-query\";\r\nimport {getAbsence} from \"@/service/RHService\";\r\n\r\nfunction Page() {\r\n    const {\r\n        page,\r\n        setPage,\r\n        search,\r\n        setSearch\r\n    } = useFiltersContext();\r\n\r\n    const {isLoading, data: absenceData} = useQuery({\r\n        queryKey: [page, search],\r\n        queryFn: getAbsence\r\n    });\r\n\r\n    const resultsAbsence = absenceData?.results;\r\n    const totalPages = absenceData?.total_pages;\r\n\r\n    return (\r\n        <section className=\"page-design py-0\">\r\n            <h1 className=\"text-4xl font-bold p-2\">Liste des absences</h1>\r\n            <DataTable\r\n                columnNames={absenceColumn} columnData={resultsAbsence} setSearch={setSearch} currentPage={page}\r\n                setCurrentPage={setPage} totalPages={totalPages} isLoading={isLoading}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Page
===================================================================
diff --git a/app/(root)/(links)/(gestionRH)/Absence/page.tsx b/app/(root)/(links)/(gestionRH)/Absence/page.tsx
--- a/app/(root)/(links)/(gestionRH)/Absence/page.tsx	(revision 278e15b7feeb1e81c611c209880532be37a20951)
+++ b/app/(root)/(links)/(gestionRH)/Absence/page.tsx	(date 1736351717329)
@@ -1,9 +1,11 @@
 'use client'
+
 import {DataTable} from "@/components/data-table";
 import {useFiltersContext} from "@/lib/context/Filters";
-import {absenceColumn} from "@/constants";
+import {absenceColumn, keyMapAbsence} from "@/constants";
 import {useQuery} from "@tanstack/react-query";
 import {getAbsence} from "@/service/RHService";
+import {transformNestedData} from "@/lib/utils";
 
 function Page() {
     const {
@@ -18,14 +20,14 @@
         queryFn: getAbsence
     });
 
-    const resultsAbsence = absenceData?.results;
     const totalPages = absenceData?.total_pages;
-
+    const transformedData = transformNestedData(absenceData?.results, keyMapAbsence)
+    console.log(absenceData)
     return (
         <section className="page-design py-0">
             <h1 className="text-4xl font-bold p-2">Liste des absences</h1>
             <DataTable
-                columnNames={absenceColumn} columnData={resultsAbsence} setSearch={setSearch} currentPage={page}
+                columnNames={absenceColumn} columnData={transformedData} setSearch={setSearch} currentPage={page}
                 setCurrentPage={setPage} totalPages={totalPages} isLoading={isLoading}
             />
         </section>
Index: service/RHService.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import axiosInstance from \"@/lib/axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\n\r\nexport const getEmployee = async ({ queryKey }: { queryKey: [number, string, string, string] }) => {\r\n    const page = queryKey[0];\r\n    const search = queryKey[1];\r\n    const startDate = queryKey[2];\r\n    const endDate = queryKey[3];\r\n\r\n    try {\r\n        const { data } = await axiosInstance.get(\"/gestionRH/Salarie/\", {\r\n            params: {\r\n                page: page,\r\n                search: search,\r\n                start_date: startDate,\r\n                end_date: endDate,\r\n            },\r\n            headers: {\r\n                'Authorization': `Bearer ${Cookies.get('token')}`\r\n            }\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return [];\r\n    }\r\n};\r\n\r\nexport const getContrat = async ({ queryKey }: { queryKey: [number, string] }) => {\r\n    const page = queryKey[0];\r\n    const search = queryKey[1];\r\n\r\n    try {\r\n        const { data } = await axiosInstance.get(\"/gestionRH/Contrat/\", {\r\n            params: {\r\n                page: page,\r\n                search: search,\r\n            },\r\n            headers: {\r\n                'Authorization': `Bearer ${Cookies.get('token')}`\r\n            }\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const getReglementCompte = async ({ queryKey }: { queryKey: [number, string] }) => {\r\n    const page = queryKey[0];\r\n    const search = queryKey[1];\r\n\r\n    try {\r\n        const { data } = await axiosInstance.get(\"/gestionRH/ReglementCompte/\", {\r\n            params: {\r\n                page: page,\r\n                search: search,\r\n            },\r\n            headers: {\r\n                'Authorization': `Bearer ${Cookies.get('token')}`\r\n            }\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const getAbsence = async ({ queryKey }: { queryKey: [number, string] }) => {\r\n    const page = queryKey[0];\r\n    const search = queryKey[1];\r\n\r\n    try {\r\n        const { data } = await axiosInstance.get(\"/gestionRH/Absence/\", {\r\n            params: {\r\n                page: page,\r\n                search: search,\r\n            },\r\n            headers: {\r\n                'Authorization': `Bearer ${Cookies.get('token')}`\r\n            }\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const getConge = async ({ queryKey }: { queryKey: [number, string] }) => {\r\n    const page = queryKey[0];\r\n    const search = queryKey[1];\r\n\r\n    try {\r\n        const { data } = await axiosInstance.get(\"/gestionRH/Conge/\", {\r\n            params: {\r\n                page: page,\r\n                search: search,\r\n            },\r\n            headers: {\r\n                'Authorization': `Bearer ${Cookies.get('token')}`\r\n            }\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const getPointage = async ({ queryKey }: { queryKey: [number, string, string, string] }) => {\r\n    const page = queryKey[0];\r\n    const search = queryKey[1];\r\n    const startDate = queryKey[2];\r\n    const endDate = queryKey[3];\r\n\r\n    try {\r\n        const { data } = await axiosInstance.get(\"/gestionRH/Pointage/\", {\r\n            params: {\r\n                page: page,\r\n                search: search,\r\n                start_date: startDate,\r\n                end_date: endDate,\r\n            },\r\n            headers: {\r\n                'Authorization': `Bearer ${Cookies.get('token')}`\r\n            }\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return [];\r\n    }\r\n}
===================================================================
diff --git a/service/RHService.ts b/service/RHService.ts
--- a/service/RHService.ts	(revision 278e15b7feeb1e81c611c209880532be37a20951)
+++ b/service/RHService.ts	(date 1736350033404)
@@ -134,4 +134,25 @@
         console.error(error);
         return [];
     }
+}
+
+export const getAvanceSalaire = async ({ queryKey }: { queryKey: [number, string] }) => {
+    const page = queryKey[0];
+    const search = queryKey[1];
+
+    try {
+        const { data } = await axiosInstance.get("/gestionRH/AvanceSalaire/", {
+            params: {
+                page: page,
+                search: search,
+            },
+            headers: {
+                'Authorization': `Bearer ${Cookies.get('token')}`
+            }
+        });
+        return data;
+    } catch (error) {
+        console.error(error);
+        return [];
+    }
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"cbbf06be-f5dd-49e7-8312-c92aa332907a\" name=\"Changes\" comment=\"Fixed conflicts\">\r\n      <change afterPath=\"$PROJECT_DIR$/app/(root)/(links)/(Stock)/entrepots/page.tsx\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/components/componentsRegistry.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/(root)/(links)/(Produits)/produits/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/(root)/(links)/(Produits)/produits/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/(root)/(links)/(admin)/add-user/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/(root)/(links)/(admin)/add-user/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/(root)/(links)/(admin)/utilisateurs/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/(root)/(links)/(admin)/utilisateurs/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/ListeConge/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/ListeConge/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/Pointage/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/Pointage/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/(root)/bill/page.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/(root)/bill/page.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/globals.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/globals.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/components/custom-input.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/components/custom-input.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/components/data-table.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/components/data-table.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/components/table-components/top-content.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/components/table-components/top-content.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/constants/index.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/constants/index.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/types/index.d.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/types/index.d.ts\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"TypeScript File\" />\r\n        <option value=\"TypeScript JSX File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/app/(root)/page.tsx\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"ProjectErrors\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2qZ6OMEwxUkzbUWEGVNZrOPReJt\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"database.data.extractors.current.export.id\": \"SQL-Insert-Multirow.sql.groovy\",\r\n    \"git-widget-placeholder\": \"Merging API-branch\",\r\n    \"last_opened_file_path\": \"D:/Erp/app/(root)/(links)\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.standard\": \"true\",\r\n    \"node.js.detected.package.stylelint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.standard\": \"\",\r\n    \"node.js.selected.package.stylelint\": \"\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"npm.dev.executor\": \"Run\",\r\n    \"prettierjs.PrettierConfiguration.Package\": \"D:\\\\Erp\\\\node_modules\\\\prettier\",\r\n    \"settings.editor.selected.configurable\": \"com.github.copilot.settings.ApplicationConfigurable\",\r\n    \"ts.external.directory.path\": \"D:\\\\Erp\\\\node_modules\\\\typescript\\\\lib\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"DatabaseDriversLRU\": [\r\n      \"sqlite\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Erp\\app\\(root)\\(links)\" />\r\n      <recent name=\"D:\\Erp\\app\\admin\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Erp\\app\\(root)\\(links)\\(Vente)\" />\r\n      <recent name=\"D:\\Erp\\app\\(root)\\(links)\\(Stock)\" />\r\n      <recent name=\"D:\\Erp\\app\\(root)\\(links)\\(Produits)\" />\r\n      <recent name=\"D:\\Erp\\app\\(root)\\(links)\\(Clients)\" />\r\n      <recent name=\"D:\\Erp\\app\\(root)\\(links)\\(admin)\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"dev\" type=\"js.build_tools.npm\" nameIsGenerated=\"true\">\r\n      <package-json value=\"$PROJECT_DIR$/package.json\" />\r\n      <command value=\"run\" />\r\n      <scripts>\r\n        <script value=\"dev\" />\r\n      </scripts>\r\n      <node-interpreter value=\"project\" />\r\n      <envs />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-WS-243.22562.222\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"cbbf06be-f5dd-49e7-8312-c92aa332907a\" name=\"Changes\" comment=\"\" />\r\n      <created>1734857718994</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1734857718994</updated>\r\n      <workItem from=\"1734857720347\" duration=\"158000\" />\r\n      <workItem from=\"1734857908555\" duration=\"857000\" />\r\n      <workItem from=\"1734869971171\" duration=\"198000\" />\r\n      <workItem from=\"1734870181851\" duration=\"12024000\" />\r\n      <workItem from=\"1734898449757\" duration=\"20000\" />\r\n      <workItem from=\"1734941381441\" duration=\"8248000\" />\r\n      <workItem from=\"1734950154702\" duration=\"403000\" />\r\n      <workItem from=\"1734950763071\" duration=\"28153000\" />\r\n      <workItem from=\"1735041572799\" duration=\"39181000\" />\r\n      <workItem from=\"1735218783623\" duration=\"52000\" />\r\n      <workItem from=\"1735218852639\" duration=\"2165000\" />\r\n      <workItem from=\"1735460737948\" duration=\"55000\" />\r\n      <workItem from=\"1735463192764\" duration=\"13587000\" />\r\n      <workItem from=\"1735479258387\" duration=\"9805000\" />\r\n      <workItem from=\"1735545956463\" duration=\"29127000\" />\r\n      <workItem from=\"1735634592510\" duration=\"11412000\" />\r\n      <workItem from=\"1735656221075\" duration=\"4000000\" />\r\n      <workItem from=\"1735978865026\" duration=\"1085000\" />\r\n      <workItem from=\"1735992490194\" duration=\"135000\" />\r\n      <workItem from=\"1736022752724\" duration=\"7902000\" />\r\n      <workItem from=\"1736065167328\" duration=\"12458000\" />\r\n      <workItem from=\"1736106692522\" duration=\"4000\" />\r\n      <workItem from=\"1736151089157\" duration=\"20000\" />\r\n      <workItem from=\"1736151866746\" duration=\"36000\" />\r\n      <workItem from=\"1736152015345\" duration=\"5389000\" />\r\n      <workItem from=\"1736161463584\" duration=\"14806000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Fixed conflicts\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735562160524</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735562160524</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Fixed conflicts\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fixed conflicts\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 278e15b7feeb1e81c611c209880532be37a20951)
+++ b/.idea/workspace.xml	(date 1736769231290)
@@ -5,21 +5,15 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="cbbf06be-f5dd-49e7-8312-c92aa332907a" name="Changes" comment="Fixed conflicts">
-      <change afterPath="$PROJECT_DIR$/app/(root)/(links)/(Stock)/entrepots/page.tsx" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/components/componentsRegistry.tsx" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/(root)/(links)/(Produits)/produits/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(root)/(links)/(Produits)/produits/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/(root)/(links)/(admin)/add-user/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(root)/(links)/(admin)/add-user/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/(root)/(links)/(admin)/utilisateurs/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(root)/(links)/(admin)/utilisateurs/page.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/Absence/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/Absence/page.tsx" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/ListeConge/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/ListeConge/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/Pointage/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/Pointage/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/(root)/bill/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(root)/bill/page.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/globals.css" beforeDir="false" afterPath="$PROJECT_DIR$/app/globals.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/components/custom-input.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/custom-input.tsx" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/components/data-table.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/data-table.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/etatConge/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(root)/(links)/(gestionRH)/etatConge/page.tsx" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/components/table-components/top-content.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/table-components/top-content.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/constants/columnRenderers.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/constants/columnRenderers.tsx" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/constants/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/constants/index.ts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/types/index.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/types/index.d.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/lib/utils.ts" beforeDir="false" afterPath="$PROJECT_DIR$/lib/utils.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/service/RHService.ts" beforeDir="false" afterPath="$PROJECT_DIR$/service/RHService.ts" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -57,34 +51,34 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "database.data.extractors.current.export.id": "SQL-Insert-Multirow.sql.groovy",
-    "git-widget-placeholder": "Merging API-branch",
-    "last_opened_file_path": "D:/Erp/app/(root)/(links)",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.standard": "true",
-    "node.js.detected.package.stylelint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.standard": "",
-    "node.js.selected.package.stylelint": "",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "npm.dev.executor": "Run",
-    "prettierjs.PrettierConfiguration.Package": "D:\\Erp\\node_modules\\prettier",
-    "settings.editor.selected.configurable": "com.github.copilot.settings.ApplicationConfigurable",
-    "ts.external.directory.path": "D:\\Erp\\node_modules\\typescript\\lib",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;database.data.extractors.current.export.id&quot;: &quot;SQL-Insert-Multirow.sql.groovy&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;API-branch&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/Erp/app/(root)/(links)&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.standard&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.stylelint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.standard&quot;: &quot;&quot;,
+    &quot;node.js.selected.package.stylelint&quot;: &quot;&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;npm.dev.executor&quot;: &quot;Run&quot;,
+    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;D:\\Erp\\node_modules\\prettier&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;com.github.copilot.settings.ApplicationConfigurable&quot;,
+    &quot;ts.external.directory.path&quot;: &quot;D:\\Erp\\node_modules\\typescript\\lib&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   },
-  "keyToStringList": {
-    "DatabaseDriversLRU": [
-      "sqlite"
+  &quot;keyToStringList&quot;: {
+    &quot;DatabaseDriversLRU&quot;: [
+      &quot;sqlite&quot;
     ]
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="D:\Erp\app\(root)\(links)" />
@@ -151,6 +145,7 @@
       <workItem from="1736151866746" duration="36000" />
       <workItem from="1736152015345" duration="5389000" />
       <workItem from="1736161463584" duration="14806000" />
+      <workItem from="1736764822533" duration="1240000" />
     </task>
     <task id="LOCAL-00001" summary="Fixed conflicts">
       <option name="closed" value="true" />
Index: app/(root)/(links)/(gestionRH)/ListeConge/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use client'\r\nimport {DataTable} from \"@/components/data-table\";\r\nimport {useFiltersContext} from \"@/lib/context/Filters\";\r\nimport {congeListColumn} from \"@/constants\";\r\nimport {useQuery} from \"@tanstack/react-query\";\r\nimport {getConge} from \"@/service/RHService\";\r\n\r\nfunction Page() {\r\n    const {\r\n        page,\r\n        setPage,\r\n        search,\r\n        setSearch\r\n    } = useFiltersContext();\r\n\r\n    const {isLoading, data: congeData} = useQuery({\r\n        queryKey: [page, search],\r\n        queryFn: getConge\r\n    });\r\n\r\n    const resultsConge = congeData?.results;\r\n    const totalPages = congeData?.total_pages;\r\n\r\n    return (\r\n        <section className=\"page-design py-0\">\r\n            <h1 className=\"text-4xl font-bold p-2\">Liste des congés pris</h1>\r\n            <DataTable\r\n                columnNames={congeListColumn} columnData={resultsConge} setSearch={setSearch} currentPage={page}\r\n                setCurrentPage={setPage} totalPages={totalPages} isLoading={isLoading}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Page
===================================================================
diff --git a/app/(root)/(links)/(gestionRH)/ListeConge/page.tsx b/app/(root)/(links)/(gestionRH)/ListeConge/page.tsx
--- a/app/(root)/(links)/(gestionRH)/ListeConge/page.tsx	(revision 278e15b7feeb1e81c611c209880532be37a20951)
+++ b/app/(root)/(links)/(gestionRH)/ListeConge/page.tsx	(date 1736345051190)
@@ -1,9 +1,10 @@
 'use client'
 import {DataTable} from "@/components/data-table";
 import {useFiltersContext} from "@/lib/context/Filters";
-import {congeListColumn} from "@/constants";
+import {congeListColumn, keyMapListConge} from "@/constants";
 import {useQuery} from "@tanstack/react-query";
 import {getConge} from "@/service/RHService";
+import { transformNestedData } from "@/lib/utils";
 
 function Page() {
     const {
@@ -20,12 +21,13 @@
 
     const resultsConge = congeData?.results;
     const totalPages = congeData?.total_pages;
+    const transformedData= transformNestedData(resultsConge, keyMapListConge)
 
     return (
         <section className="page-design py-0">
             <h1 className="text-4xl font-bold p-2">Liste des congés pris</h1>
             <DataTable
-                columnNames={congeListColumn} columnData={resultsConge} setSearch={setSearch} currentPage={page}
+                columnNames={congeListColumn} columnData={transformedData} setSearch={setSearch} currentPage={page}
                 setCurrentPage={setPage} totalPages={totalPages} isLoading={isLoading}
             />
         </section>
